<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member_projectMapper">
	
	<insert id="insertTeamMember" parameterType="Member_Project" >
		insert into member_project values(#{projectno}, #{userno}, sysdate, 'ONLY_READ')
	</insert>
	
	<!-- 건우 -->
	<select id="selectProjectList" parameterType="int" resultType="Project">
		select projectno, projectname,projectimage_o from project inner join (select projectno from member_project where userno =#{userno}) using(projectno)
	</select>
	<update id="changeAuth" parameterType="Member_Project">	  
		UPDATE MEMBER_PROJECT  SET USERAUTH = #{userauth}  WHERE USERNO=#{userno} and projectno=#{projectno}
	</update>
	
	<!-- 팀원강퇴 -->
	<delete id="memberKick" parameterType="Member_Project"	>
		delete from member_project  where userno=#{userno} and projectno=#{projectno}
	</delete>
	<!-- 프리미엄없을시 모두 readonly -->
	<update id="setAllOnlyRead" parameterType="int">
		  UPDATE MEMBER_PROJECT  SET USERAUTH   = 'ONLY_READ'  WHERE PROJECTNO=#{PROJECTNO}
	</update>
	<!-- Premium을 찾아서 리더로 지정 -->
	<select id="searchNextLeader" parameterType="int"  resultType="int" >
		 	SELECT NVL(USERNO, 0) USERNO
			 FROM MEMBER_PROJECT INNER JOIN MEMBER USING(USERNO)
      		WHERE PROJECTNO = #{PROJECTNO} AND USERAUTH != 'LEADER'  AND rownum = 1 
      		ORDER BY PROJECTJOINDATE ASC
	</select>
	<!-- 프로젝트 진입시 유저 권한 검색.후 세션저장 -->
	<select id="selectUserAuth" parameterType="HashMap" resultType="String">
		select userauth from member_project where userno=#{userno} and  projectno=#{projectno}
	</select>
	
</mapper>